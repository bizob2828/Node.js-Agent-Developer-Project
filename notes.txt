Node.js Agent Developer Project
Our agent technology is the heart and soul of our product.
Agent engineers need to be highly proficient in the language they are supporting.
They must want to explore the internals of the language and the engine the language runs within.
To really be successful you have to be willing to “hack” the language you are working.
Each of the languages below provides an interface to capture a bevy of instrumentation from your web application.

This project takes can take upwards of 8-10 hours.

For this project we are asking that you build the beginnings of a Node.js agent.
The agent will simply have to be configured into the runtime of an Express, Hapi, or Koa application and perform some very basic instrumentation.
We recommend that you look at existing APM technology like New Relic, AppDynamics or Dynatrace for inspiration.
If you are familiar with an APM agent, then you will quickly learn how to solve a basic agent instrumentation effort.

Project Requirements

Count how many string objects were created for an API request.
Instrument the response to include a unique ID
We then want you to explore (2 out of 3) data points specifically:

Time the request from start to finish.
How much memory does a single page request take?
How many modules were loaded?
Provide an interface that instruments the application to answer the questions above (preferably both to an endpoint, console and log).
Ideally, the interface is a flag or switch that can be turned on/off as part of the startup of the application.

Bonus: Show metrics on the page or a separate app/webpage

Additional Requirements

Unit tests
Make sure to write an amazing README in your GitHub project that explains what you built, why you built it, how to deploy it up and how to use it.
CI Pipeline to compile, build, test and report in Travis CI which is free for any Open Source project in GitHub Include the Travis build badge in your README to show status.